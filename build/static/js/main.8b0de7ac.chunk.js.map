{"version":3,"sources":["components/Entry.js","components/Notification.js","components/Footer.js","services/entries.js","App.js","index.js"],"names":["Entry","entry","toggleImportance","label","important","className","name","number","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","entries","axios","get","then","response","data","newObject","post","id","put","App","useState","setEntries","newEntry","setNewEntry","showAll","setShowAll","errorMessage","setErrorMessage","entriesToShow","setEntriesToShow","useEffect","entryService","getAll","initialEntries","filterImportant","filter","map","find","n","changedEntry","update","returnedEntry","catch","error","content","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","create","returnedNote","concat","value","onChange","console","log","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b0de7ac.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Entry = ({ entry, toggleImportance }) => {\n  const label = entry.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className=\"note\">\n      {entry.name}\n      {entry.number}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Entry;\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Phonebook app created alongside University of Helsinki's Fullstack open\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\nconst baseUrl = \"https://murmuring-savannah-09830.herokuapp.com/api/persons\";\n\nconst entries = {}\n\nentries.getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nentries.create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nentries.update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default entries","import React, { useState, useEffect } from 'react'\nimport Entry from './components/Entry'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport entryService from './services/entries'\n\nconst App = () => {\n  const [entries, setEntries] = useState([])\n  const [newEntry, setNewEntry] = useState('')\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [entriesToShow, setEntriesToShow] = useState([])\n\n  useEffect(() => {\n    entryService\n      .getAll()\n      .then(initialEntries => {\n      setEntries(initialEntries)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newEntry,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    entryService\n      .create(noteObject)\n        .then(returnedNote => {\n        setEntries(entries.concat(returnedNote))\n        setNewEntry('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const entry = entries.find(n => n.id === id)\n    const changedEntry = { ...entry, important: !entry.important }\n  \n    entryService\n    .update(id, changedEntry)\n      .then(returnedEntry => {\n      setEntries(entries.map(entry => entry.id !== id ? entry : returnedEntry))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Entry '${entry.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })    \n  }\n\n  const handleEntryChange = (event) => {\n    console.log(event.target.value)\n    setNewEntry(event.target.value)\n  }\n\n  useEffect(() => {\n    const filterImportant = showAll\n      ? entries\n      : entries.filter((entry) => entry.important)\n\n    setEntriesToShow(filterImportant)\n\n    \n  },[showAll, entries])\n  \n\n  return (\n    <div>\n      <h1>Phonebook Entries</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {entriesToShow.map(entry => \n\n            <Entry\n              key={entry.id}\n              entry={entry} \n              toggleImportance={() => toggleImportanceOf(entry.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newEntry}\n          onChange={handleEntryChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}